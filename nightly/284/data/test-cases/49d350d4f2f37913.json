{"uid":"49d350d4f2f37913","name":"BACKWARD-CHAIN.01","historyId":"CHAINING:CHAINING#BACKWARD-CHAIN.01","time":{"start":1727138931000,"stop":1727138931246,"duration":246},"status":"failed","statusMessage":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","statusTrace":"AssertionError: Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-24T00:34:03/tests/more-anti-regression/chaining/backward_chain.metta.html#CHAINING.BACKWARD-CHAIN.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (deduce (Evaluation (mortal $x))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"CHAINING"},{"name":"testClass","value":"CHAINING"},{"name":"package","value":"CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"f6b5bc796e5470f1","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/283//#testresult/f6b5bc796e5470f1","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727052529000,"stop":1727052529233,"duration":233}},{"uid":"7007096e84120100","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/282//#testresult/7007096e84120100","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1726966260000,"stop":1726966260230,"duration":230}},{"uid":"d92ca1ea5f0b780e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/d92ca1ea5f0b780e","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1726879622000,"stop":1726879622252,"duration":252}},{"uid":"1b14a276a611587","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/1b14a276a611587","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1726793273000,"stop":1726793273232,"duration":232}},{"uid":"3ebd0bf5170560e1","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/44//#testresult/3ebd0bf5170560e1","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725587971000,"stop":1725587971000,"duration":0}},{"uid":"16a854db02b78ff4","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/43//#testresult/16a854db02b78ff4","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725501589000,"stop":1725501589000,"duration":0}},{"uid":"a16f4c63195e49ae","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/42//#testresult/a16f4c63195e49ae","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725415181000,"stop":1725415181000,"duration":0}},{"uid":"539165f361c9c37f","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/41//#testresult/539165f361c9c37f","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725328738000,"stop":1725328738000,"duration":0}},{"uid":"1c8e492bafae9b46","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/40//#testresult/1c8e492bafae9b46","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725242491000,"stop":1725242491000,"duration":0}},{"uid":"cb81c30a15fe800b","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/39//#testresult/cb81c30a15fe800b","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725156815000,"stop":1725156815000,"duration":0}},{"uid":"cf622a3bf947d129","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/38//#testresult/cf622a3bf947d129","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_4104) proven by ((human $_4104) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1725069514000,"stop":1725069514000,"duration":0}}]},"tags":[]},"source":"49d350d4f2f37913.json","parameterValues":[]}