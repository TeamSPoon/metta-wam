{"uid":"50ac8e0eb4ccc6fa","name":"BC-IMPL.02","historyId":"WALK-THRU:WALK-THRU#BC-IMPL.02","time":{"start":1727142479000,"stop":1727142479894,"duration":894},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-24T00:34:03/tests/direct_comp/walk_thru/bc_impl.metta.html#WALK-THRU.BC-IMPL.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: rule1 (-> (nums $x $y) (rule1output $x $y)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"WALK-THRU"},{"name":"testClass","value":"WALK-THRU"},{"name":"package","value":"WALK-THRU"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"f09f8a8f69966b2d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/283//#testresult/f09f8a8f69966b2d","status":"passed","time":{"start":1727056052000,"stop":1727056052909,"duration":909}},{"uid":"9a53dd7e896dbd4f","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/282//#testresult/9a53dd7e896dbd4f","status":"passed","time":{"start":1726969793000,"stop":1726969793959,"duration":959}},{"uid":"fe05603bcc4e383d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/fe05603bcc4e383d","status":"passed","time":{"start":1726883133000,"stop":1726883133869,"duration":869}},{"uid":"8c0a0d9e3fbac03c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/8c0a0d9e3fbac03c","status":"passed","time":{"start":1726796789000,"stop":1726796789911,"duration":911}}]},"tags":[]},"source":"50ac8e0eb4ccc6fa.json","parameterValues":[]}