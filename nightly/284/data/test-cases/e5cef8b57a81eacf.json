{"uid":"e5cef8b57a81eacf","name":"LTE.08","historyId":"STD:STD#LTE.08","time":{"start":1727139156000,"stop":1727139156002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-24T00:34:03/tests/more-anti-regression/std/lte.metta.html#STD.LTE.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: r8 (-> (≤ $x $y) (-> (≤ $y $z) (≤ $x $z))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"STD"},{"name":"testClass","value":"STD"},{"name":"package","value":"STD"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"b2aca23fa4c542c5","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/283//#testresult/b2aca23fa4c542c5","status":"passed","time":{"start":1727052750000,"stop":1727052750002,"duration":2}},{"uid":"cc9612a1ea49575e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/282//#testresult/cc9612a1ea49575e","status":"passed","time":{"start":1726966485000,"stop":1726966485001,"duration":1}},{"uid":"9365ba4e6a823bc0","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/9365ba4e6a823bc0","status":"passed","time":{"start":1726879843000,"stop":1726879843001,"duration":1}},{"uid":"f89604d2911864b9","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/f89604d2911864b9","status":"passed","time":{"start":1726793495000,"stop":1726793495002,"duration":2}}]},"tags":[]},"source":"e5cef8b57a81eacf.json","parameterValues":[]}