{"uid":"e569bbae76bd997d","name":"BCHAIN-COMP.06","historyId":"ANTI-REGRESSION:ANTI-REGRESSION#BCHAIN-COMP.06","time":{"start":1727138503000,"stop":1727138503003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-24T00:34:03/tests/baseline_compat/anti-regression/bchain_comp.metta.html#ANTI-REGRESSION.BCHAIN-COMP.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (bc (: $prf (less $x $y)) (S (S (S Z)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((: ((rule (rule1 axiom)) CPU) (less 2 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((: ((rule (rule1 axiom)) CPU) (less 2 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ANTI-REGRESSION"},{"name":"testClass","value":"ANTI-REGRESSION"},{"name":"package","value":"ANTI-REGRESSION"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":12},"items":[{"uid":"95110f585e3c057c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/283//#testresult/95110f585e3c057c","status":"passed","time":{"start":1727052104000,"stop":1727052104002,"duration":2}},{"uid":"e781b76a77417faa","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/282//#testresult/e781b76a77417faa","status":"passed","time":{"start":1726965835000,"stop":1726965835003,"duration":3}},{"uid":"9088a2b9191e0cfe","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/9088a2b9191e0cfe","status":"passed","time":{"start":1726879199000,"stop":1726879199003,"duration":3}},{"uid":"7b4be32988bc3cd2","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/7b4be32988bc3cd2","status":"passed","time":{"start":1726792847000,"stop":1726792847002,"duration":2}},{"uid":"414da3a448b4c3b4","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/44//#testresult/414da3a448b4c3b4","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725587591000,"stop":1725587591000,"duration":0}},{"uid":"f3ad78ab06073216","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/43//#testresult/f3ad78ab06073216","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725501209000,"stop":1725501209000,"duration":0}},{"uid":"24eef3d9b3f084b0","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/42//#testresult/24eef3d9b3f084b0","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725414756000,"stop":1725414756000,"duration":0}},{"uid":"a0c479aa76a892c6","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/41//#testresult/a0c479aa76a892c6","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725328314000,"stop":1725328314000,"duration":0}},{"uid":"a60276d38372eed6","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/40//#testresult/a60276d38372eed6","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725242066000,"stop":1725242066000,"duration":0}},{"uid":"c6189d8add7ccbbb","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/39//#testresult/c6189d8add7ccbbb","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725156391000,"stop":1725156391000,"duration":0}},{"uid":"15cfdd4cc5574684","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/38//#testresult/15cfdd4cc5574684","status":"failed","statusDetails":"Test failed: Expected '((: ((rule (rule1 axiom)) CPU) (less 2 3)))' but got '()'","time":{"start":1725069091000,"stop":1725069091000,"duration":0}}]},"tags":[]},"source":"e569bbae76bd997d.json","parameterValues":[]}