{"uid":"2e175c7c0bc507ee","name":"F1-IMPORTS.14","historyId":"QUICK:QUICK#F1-IMPORTS.14","time":{"start":1727138634000,"stop":1727138634002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-24T00:34:03/tests/baseline_compat/quick/f1_imports.metta.html#QUICK.F1-IMPORTS.14\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (== (let* (($x (collapse (get-atoms &m))) ($y (car-atom $x))) (get-type $y)) (get-type &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"bba6434ee4764734","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/283//#testresult/bba6434ee4764734","status":"passed","time":{"start":1727052231000,"stop":1727052231002,"duration":2}},{"uid":"ca97309b94a56edd","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/282//#testresult/ca97309b94a56edd","status":"passed","time":{"start":1726965963000,"stop":1726965963002,"duration":2}},{"uid":"448b9b65d64ea1b7","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/448b9b65d64ea1b7","status":"passed","time":{"start":1726879326000,"stop":1726879326002,"duration":2}},{"uid":"831e3aca8a5adeba","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/831e3aca8a5adeba","status":"passed","time":{"start":1726792976000,"stop":1726792976002,"duration":2}}]},"tags":[]},"source":"2e175c7c0bc507ee.json","parameterValues":[]}