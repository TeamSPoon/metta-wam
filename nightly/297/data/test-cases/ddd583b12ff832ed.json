{"uid":"ddd583b12ff832ed","name":"SUBTYPING-TEST.05","historyId":"SUBTYPING:SUBTYPING#SUBTYPING-TEST.05","time":{"start":1728264356000,"stop":1728264356092,"duration":92},"status":"failed","statusMessage":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-07T00:35:48/tests/extended_compat/hyperon-pln/metta/subtyping/subtyping-test.metta.html#SUBTYPING.SUBTYPING-TEST.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: (coerce $proof felix) Animal) kb rb (fromNumber 2)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"SUBTYPING"},{"name":"testClass","value":"SUBTYPING"},{"name":"package","value":"SUBTYPING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"4c85bb823f2aee87","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/296//#testresult/4c85bb823f2aee87","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1728178009000,"stop":1728178009107,"duration":107}},{"uid":"20aa5dedc9e0d0c1","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/295//#testresult/20aa5dedc9e0d0c1","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1728091398000,"stop":1728091398109,"duration":109}},{"uid":"33159922021aa6e3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/294//#testresult/33159922021aa6e3","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1728005054000,"stop":1728005054105,"duration":105}},{"uid":"d89e877096a0d6f4","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/293//#testresult/d89e877096a0d6f4","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727918635000,"stop":1727918635105,"duration":105}},{"uid":"460252b18aec8bc","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/460252b18aec8bc","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727832252000,"stop":1727832252119,"duration":119}},{"uid":"32e36d0e2cfd1fcb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/32e36d0e2cfd1fcb","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727746051000,"stop":1727746051108,"duration":108}},{"uid":"896e11d4ad42399a","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/896e11d4ad42399a","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727659592000,"stop":1727659592117,"duration":117}},{"uid":"d02c23032c7043d3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/d02c23032c7043d3","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727573294000,"stop":1727573294095,"duration":95}},{"uid":"551467b82e5290ab","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/551467b82e5290ab","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727486606000,"stop":1727486606087,"duration":87}},{"uid":"947a6460ebb86eff","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/947a6460ebb86eff","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727400238000,"stop":1727400238120,"duration":120}},{"uid":"b883f6a002644e77","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/b883f6a002644e77","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727313784000,"stop":1727313784105,"duration":105}}]},"tags":[]},"source":"ddd583b12ff832ed.json","parameterValues":[]}