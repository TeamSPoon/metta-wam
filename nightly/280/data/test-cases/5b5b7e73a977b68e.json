{"uid":"5b5b7e73a977b68e","name":"IFC-XP.25","historyId":"ITERATIVE-CHAINING:ITERATIVE-CHAINING#IFC-XP.25","time":{"start":1726795181000,"stop":1726795181181,"duration":181},"status":"failed","statusMessage":"Test failed: Expected '(kb_bare (lambda0 C) (let $_48576 (superpose ()) (let $_48630 (lambda0 $_48576) (let $_48694 (superpose ((lambda0 B) $_48630)) (ic_bare_collapse $_48576 $_48694 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","statusTrace":"AssertionError: Test failed: Expected '(kb_bare (lambda0 C) (let $_48576 (superpose ()) (let $_48630 (lambda0 $_48576) (let $_48694 (superpose ((lambda0 B) $_48630)) (ic_bare_collapse $_48576 $_48694 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-20T00:33:03/tests/extended_compat/hyperon-pln/metta/iterative-chaining/ifc-xp.metta.html#ITERATIVE-CHAINING.IFC-XP.25\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (ic_bare_collapse A kb_bare rb_bare (fromNumber 1) (fromNumber 2)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (kb_bare (lambda0 C) (let $_48576 (superpose ()) (let $_48630 (lambda0 $_48576) (let $_48694 (superpose ((lambda0 B) $_48630)) (ic_bare_collapse $_48576 $_48694 rb_bare (S Z) Z)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (kb_bare (lambda0 C))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ITERATIVE-CHAINING"},{"name":"testClass","value":"ITERATIVE-CHAINING"},{"name":"package","value":"ITERATIVE-CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"4d011d53ae51352f","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/44//#testresult/4d011d53ae51352f","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725590072000,"stop":1725590072000,"duration":0}},{"uid":"bdee8ba81ea3bbf3","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/43//#testresult/bdee8ba81ea3bbf3","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725503696000,"stop":1725503696000,"duration":0}},{"uid":"3e388e9ac1171816","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/42//#testresult/3e388e9ac1171816","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725417257000,"stop":1725417257000,"duration":0}},{"uid":"239e2ff3d9fbed0b","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/41//#testresult/239e2ff3d9fbed0b","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725330807000,"stop":1725330807000,"duration":0}},{"uid":"600bfcd803866031","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/40//#testresult/600bfcd803866031","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725244561000,"stop":1725244561000,"duration":0}},{"uid":"5f25f2fea2ec4ca2","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/39//#testresult/5f25f2fea2ec4ca2","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725158886000,"stop":1725158886000,"duration":0}},{"uid":"d2bbc754a934293c","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/38//#testresult/d2bbc754a934293c","status":"failed","statusDetails":"Test failed: Expected '(kb_bare (lambda0 C) (let $_4504 (superpose ()) (let $_4546 (lambda0 $_4504) (let $_4588 (superpose ((lambda0 B) $_4546)) (ic_bare_collapse $_4504 $_4588 rb_bare (S Z) Z)))))' but got '(kb_bare (lambda0 C))'","time":{"start":1725071582000,"stop":1725071582000,"duration":0}}]},"tags":[]},"source":"5b5b7e73a977b68e.json","parameterValues":[]}