{"uid":"9dd7def99ec92af7","name":"NATSIMPLETEST.03","historyId":"HOL:HOL#NATSIMPLETEST.03","time":{"start":1728004698000,"stop":1728004698295,"duration":295},"status":"failed","statusMessage":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","statusTrace":"AssertionError: Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-04T00:34:06/tests/extended_compat/hyperon-pln/metta/hol/NatSimpleTest.metta.html#HOL.NATSIMPLETEST.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: $proof (=== (plus (S Z) (S Z)) (S (S Z)))) kb rb (fromNumber 2)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((: Base_plus False) (: Rec_plus False))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HOL"},{"name":"testClass","value":"HOL"},{"name":"package","value":"HOL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"84523501d777ec3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/293//#testresult/84523501d777ec3","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727918280000,"stop":1727918280276,"duration":276}},{"uid":"2fdb5c3862c647da","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/2fdb5c3862c647da","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727831893000,"stop":1727831893277,"duration":277}},{"uid":"f8f24b2e9c0f3463","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/f8f24b2e9c0f3463","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727745691000,"stop":1727745691296,"duration":296}},{"uid":"98ff590ed6b23f73","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/98ff590ed6b23f73","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727659236000,"stop":1727659236319,"duration":319}},{"uid":"9017667ca9bd4edc","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/9017667ca9bd4edc","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727572933000,"stop":1727572933294,"duration":294}},{"uid":"ba4cfcadde3a97ff","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/ba4cfcadde3a97ff","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727486248000,"stop":1727486248280,"duration":280}},{"uid":"9c34e845c2198795","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/9c34e845c2198795","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727399880000,"stop":1727399880271,"duration":271}},{"uid":"93c5d59941328cb2","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/93c5d59941328cb2","status":"failed","statusDetails":"Test failed: Expected '((: (EqTrans Rec_plus (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans EqRefl Rec_plus) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))) (: (EqTrans (EqTrans Rec_plus EqRefl) (EqStruct1 Base_plus)) (=== (plus (S Z) (S Z)) (S (S Z)))))' but got '((: Base_plus False) (: Rec_plus False))'","time":{"start":1727313431000,"stop":1727313431309,"duration":309}}]},"tags":[]},"source":"9dd7def99ec92af7.json","parameterValues":[]}