{"uid":"8583fc8c2ace988d","name":"LETLET.01","historyId":"TRANSPILER:TRANSPILER#LETLET.01","time":{"start":1728006480000,"stop":1728006480003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-04T00:34:06/tests/direct_comp/transpiler/letlet.metta.html#TRANSPILER.LETLET.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $T (1.0 0.9) (let* ((($f1 $c1) $T)) ($f1 $c1))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((1.0 0.9))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((1.0 0.9))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"TRANSPILER"},{"name":"testClass","value":"TRANSPILER"},{"name":"package","value":"TRANSPILER"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"e1eace601ddc3647","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/293//#testresult/e1eace601ddc3647","status":"passed","time":{"start":1727920065000,"stop":1727920065002,"duration":2}},{"uid":"f9f84d056d785757","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/f9f84d056d785757","status":"passed","time":{"start":1727833681000,"stop":1727833681002,"duration":2}},{"uid":"334ddb75ed460a08","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/334ddb75ed460a08","status":"passed","time":{"start":1727747477000,"stop":1727747477003,"duration":3}},{"uid":"72fff13ba5993c29","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/72fff13ba5993c29","status":"passed","time":{"start":1727661022000,"stop":1727661022003,"duration":3}},{"uid":"b9a288713f74e482","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/b9a288713f74e482","status":"passed","time":{"start":1727574721000,"stop":1727574721003,"duration":3}},{"uid":"78f9643b45b8e24","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/78f9643b45b8e24","status":"passed","time":{"start":1727488029000,"stop":1727488029003,"duration":3}},{"uid":"db34d63b21028aa7","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/db34d63b21028aa7","status":"passed","time":{"start":1727401665000,"stop":1727401665003,"duration":3}},{"uid":"3a7e336a9181353d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/3a7e336a9181353d","status":"passed","time":{"start":1727315210000,"stop":1727315210003,"duration":3}}]},"tags":[]},"source":"8583fc8c2ace988d.json","parameterValues":[]}