{"uid":"6b820ec265d8b703","name":"TYPES-PRELIM.16","historyId":"CHAINING:CHAINING#TYPES-PRELIM.16","time":{"start":1728002940000,"stop":1728002940001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-04T00:34:06/tests/more-anti-regression/chaining/types_prelim.metta.html#CHAINING.TYPES-PRELIM.16\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (let $r (Add (S Z) Z) (match &self (= (eq $r (S Z)) $tv) $tv)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (T)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (T)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"CHAINING"},{"name":"testClass","value":"CHAINING"},{"name":"package","value":"CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"4837e4fe5beb88c0","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/293//#testresult/4837e4fe5beb88c0","status":"passed","time":{"start":1727916525000,"stop":1727916525002,"duration":2}},{"uid":"ede81482b19bab9c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/ede81482b19bab9c","status":"passed","time":{"start":1727830139000,"stop":1727830139002,"duration":2}},{"uid":"9afcfe36ff005fe9","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/9afcfe36ff005fe9","status":"passed","time":{"start":1727743944000,"stop":1727743944001,"duration":1}},{"uid":"cef34f867140b35d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/cef34f867140b35d","status":"passed","time":{"start":1727657480000,"stop":1727657480002,"duration":2}},{"uid":"66baf0b2ad8b4a7b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/66baf0b2ad8b4a7b","status":"passed","time":{"start":1727571183000,"stop":1727571183001,"duration":1}},{"uid":"b57e7e87393a732b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/b57e7e87393a732b","status":"passed","time":{"start":1727484492000,"stop":1727484492001,"duration":1}},{"uid":"25061d8c3289f2c4","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/25061d8c3289f2c4","status":"passed","time":{"start":1727398125000,"stop":1727398125002,"duration":2}},{"uid":"ac0d95f47e4a31cb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/ac0d95f47e4a31cb","status":"passed","time":{"start":1727311705000,"stop":1727311705002,"duration":2}}]},"tags":[]},"source":"6b820ec265d8b703.json","parameterValues":[]}