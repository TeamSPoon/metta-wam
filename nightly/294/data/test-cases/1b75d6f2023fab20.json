{"uid":"1b75d6f2023fab20","name":"BC-COMP.03","historyId":"WALK-THRU:WALK-THRU#BC-COMP.03","time":{"start":1728006507000,"stop":1728006507001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-04T00:34:06/tests/direct_comp/walk_thru/bc_comp.metta.html#WALK-THRU.BC-COMP.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: rule (-> (rule1output $x $y) (-> (⍃ $x $y) (less $x $y))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"WALK-THRU"},{"name":"testClass","value":"WALK-THRU"},{"name":"package","value":"WALK-THRU"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"dfc0b7b46838e979","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/293//#testresult/dfc0b7b46838e979","status":"passed","time":{"start":1727920090000,"stop":1727920090002,"duration":2}},{"uid":"95ba2dffc3115223","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/95ba2dffc3115223","status":"passed","time":{"start":1727833706000,"stop":1727833706002,"duration":2}},{"uid":"7b4d829181863d8","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/7b4d829181863d8","status":"passed","time":{"start":1727747504000,"stop":1727747504001,"duration":1}},{"uid":"88a0f0e1b213e846","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/88a0f0e1b213e846","status":"passed","time":{"start":1727661047000,"stop":1727661047002,"duration":2}},{"uid":"e5bd03e82d9682ae","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/e5bd03e82d9682ae","status":"passed","time":{"start":1727574748000,"stop":1727574748002,"duration":2}},{"uid":"f8408cc730cc4a26","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/f8408cc730cc4a26","status":"passed","time":{"start":1727488055000,"stop":1727488055002,"duration":2}},{"uid":"e0a4e9c5e251d667","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/e0a4e9c5e251d667","status":"passed","time":{"start":1727401691000,"stop":1727401691002,"duration":2}},{"uid":"851e2d5f6bf7f804","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/851e2d5f6bf7f804","status":"passed","time":{"start":1727315236000,"stop":1727315236002,"duration":2}}]},"tags":[]},"source":"1b75d6f2023fab20.json","parameterValues":[]}