{"uid":"81193dcc37cf1e26","name":"F1-IMPORTS.14","historyId":"QUICK:QUICK#F1-IMPORTS.14","time":{"start":1727570888000,"stop":1727570888002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-29T00:38:07/tests/baseline_compat/quick/f1_imports.metta.html#QUICK.F1-IMPORTS.14\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (== (let* (($x (collapse (get-atoms &m))) ($y (car-atom $x))) (get-type $y)) (get-type &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"7aa183543a54de4b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/7aa183543a54de4b","status":"passed","time":{"start":1727484196000,"stop":1727484196002,"duration":2}},{"uid":"372cd2ea7d4744d8","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/372cd2ea7d4744d8","status":"passed","time":{"start":1727397826000,"stop":1727397826001,"duration":1}},{"uid":"7f9387b73c9d20d6","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/7f9387b73c9d20d6","status":"passed","time":{"start":1727311409000,"stop":1727311409001,"duration":1}}]},"tags":[]},"source":"81193dcc37cf1e26.json","parameterValues":[]}