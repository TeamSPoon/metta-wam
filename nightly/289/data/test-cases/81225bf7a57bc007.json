{"uid":"81225bf7a57bc007","name":"NUMTEST.10","historyId":"COMMON:COMMON#NUMTEST.10","time":{"start":1727572763000,"stop":1727572763004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-29T00:38:07/tests/extended_compat/hyperon-pln/metta/common/NumTest.metta.html#COMMON.NUMTEST.10\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (synthesize (: $proof (⍃ (fromNumber 2) (fromNumber 7))) kb rb (fromNumber 5)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((: (SuccMonotonicity (SuccMonotonicity ZeroLTSucc)) (⍃ (S (S Z)) (S (S (S (S (S (S (S Z))))))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((: (SuccMonotonicity (SuccMonotonicity ZeroLTSucc)) (⍃ (S (S Z)) (S (S (S (S (S (S (S Z))))))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"COMMON"},{"name":"testClass","value":"COMMON"},{"name":"package","value":"COMMON"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"e0ab13106c6dc7b4","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/e0ab13106c6dc7b4","status":"passed","time":{"start":1727486080000,"stop":1727486080003,"duration":3}},{"uid":"9ae8abc8d0ef5c68","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/9ae8abc8d0ef5c68","status":"passed","time":{"start":1727399711000,"stop":1727399711003,"duration":3}},{"uid":"cb95ef7a80baef3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/cb95ef7a80baef3","status":"passed","time":{"start":1727313266000,"stop":1727313266004,"duration":4}}]},"tags":[]},"source":"81225bf7a57bc007.json","parameterValues":[]}