{"uid":"4d1b6b3c48820b4","name":"NATSIMPLETEST.05","historyId":"HOL:HOL#NATSIMPLETEST.05","time":{"start":1726967987000,"stop":1726967987759,"duration":759},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-22T00:36:13/tests/extended_compat/hyperon-pln/metta/hol/NatSimpleTest.metta.html#HOL.NATSIMPLETEST.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: $proof (=== (plus (fromNumber 2) (fromNumber 2)) (fromNumber 4))) kb rb (fromNumber 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((let* (((: $_564500 (=== (plus (S (S Z)) (S (S Z))) (S (S (S (S Z)))))) (synthesize (: $_564500 (=== (plus (S (S Z)) (S (S Z))) (S (S (S (S Z)))))) kb rb (S (S Z))))) (: (EqTrans EqRefl $_564500) (=== (plus (S (S Z)) (S (S Z))) (S (S (S (S Z))))))) (let (: $_564500 (=== (S (plus (S Z) (S (S Z)))) (S (S (S (S Z)))))) (synthesize (: $_564500 (=== (S (plus (S Z) (S (S Z)))) (S (S (S (S Z)))))) kb rb (S (S Z))) (: (EqTrans Rec_plus $_564500) (=== (plus (S (S Z)) (S (S Z))) (S (S (S (S Z))))))) (let (: $_564500 (=== (plus (S (S Z)) (S (S Z))) (S (S (S (S Z)))))) (synthesize (: $_564500 (=== (plus ...(28501)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((: Base_plus False) (: Rec_plus False))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HOL"},{"name":"testClass","value":"HOL"},{"name":"package","value":"HOL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"ccdf621aab7e11a5","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/ccdf621aab7e11a5","status":"passed","time":{"start":1726881332000,"stop":1726881332736,"duration":736}},{"uid":"ef9d37d0a5992434","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/ef9d37d0a5992434","status":"passed","time":{"start":1726794991000,"stop":1726794991758,"duration":758}}]},"tags":[]},"source":"4d1b6b3c48820b4.json","parameterValues":[]}