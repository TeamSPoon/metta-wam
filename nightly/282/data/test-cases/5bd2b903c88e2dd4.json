{"uid":"5bd2b903c88e2dd4","name":"NATSTANDALONETEST.13","historyId":"HOL:HOL#NATSTANDALONETEST.13","time":{"start":1726967987000,"stop":1726967987293,"duration":293},"status":"failed","statusMessage":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-22T00:36:13/tests/extended_compat/hyperon-pln/metta/hol/NatStandaloneTest.metta.html#HOL.NATSTANDALONETEST.13\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (bc (: $prf (-> (=== (plus $x Z) $x) (=== (plus (S $x) Z) (S $x)))) (fromNumber 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HOL"},{"name":"testClass","value":"HOL"},{"name":"package","value":"HOL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"fdc19257a8fc6a6e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/fdc19257a8fc6a6e","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1726881332000,"stop":1726881332279,"duration":279}},{"uid":"995212f3f785300a","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/995212f3f785300a","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1726794991000,"stop":1726794991275,"duration":275}},{"uid":"a1a5926bfa573c3d","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/44//#testresult/a1a5926bfa573c3d","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725589753000,"stop":1725589753000,"duration":0}},{"uid":"bda0bdeb6064a1f8","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/43//#testresult/bda0bdeb6064a1f8","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725503377000,"stop":1725503377000,"duration":0}},{"uid":"d8bfb73e477c1002","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/42//#testresult/d8bfb73e477c1002","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725416936000,"stop":1725416936000,"duration":0}},{"uid":"659f71c207123f70","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/41//#testresult/659f71c207123f70","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725330485000,"stop":1725330485000,"duration":0}},{"uid":"13bea47fb5c21c19","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/40//#testresult/13bea47fb5c21c19","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725244240000,"stop":1725244240000,"duration":0}},{"uid":"64e2fee64c0b1b2d","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/39//#testresult/64e2fee64c0b1b2d","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725158567000,"stop":1725158567000,"duration":0}},{"uid":"4cf978882ce6c302","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/38//#testresult/4cf978882ce6c302","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_12906))))) (bc (: $_13062 (plus Z (=== (=== (plus $_12906 Z) $_12906) (=== (plus (S $_12906) Z) (S $_1290...' but got '()'","time":{"start":1725071263000,"stop":1725071263000,"duration":0}}]},"tags":[]},"source":"5bd2b903c88e2dd4.json","parameterValues":[]}