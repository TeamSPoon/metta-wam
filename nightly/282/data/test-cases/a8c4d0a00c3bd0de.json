{"uid":"a8c4d0a00c3bd0de","name":"SYNTHESIZE-VIA-LET-TEST.08","historyId":"EXPERIMENTS:EXPERIMENTS#SYNTHESIZE-VIA-LET-TEST.08","time":{"start":1726968452000,"stop":1726968453186,"duration":1186},"status":"failed","statusMessage":"Test failed: Expected '((⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 Bool)) (syn (: h (-> $_31993016 Bool)) (S (S Z))) (: (. (. f h) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993016 String)) (S (S Z))) (: (. (. f (. h g)) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993...(188)' but got '((⊷ syn ((: (. f h) (-> Bool String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. (. (. f h) (. g f)) h) (-> Bool String)) (S (S (S Z)))) (: (. (. (. f h) (. g f)) h) (-> Bool String))))'","statusTrace":"AssertionError: Test failed: Expected '((⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 Bool)) (syn (: h (-> $_31993016 Bool)) (S (S Z))) (: (. (. f h) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993016 String)) (S (S Z))) (: (. (. f (. h g)) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993...(188)' but got '((⊷ syn ((: (. f h) (-> Bool String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. (. (. f h) (. g f)) h) (-> Bool String)) (S (S (S Z)))) (: (. (. (. f h) (. g f)) h) (-> Bool String))))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-22T00:36:13/tests/extended_compat/hyperon-pln/metta/synthesis/experiments/synthesize-via-let-test.metta.html#EXPERIMENTS.SYNTHESIZE-VIA-LET-TEST.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (record syn ((: (. $g h) (-> $in String)) (fromNumber 3))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 Bool)) (syn (: h (-> $_31993016 Bool)) (S (S Z))) (: (. (. f h) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993016 String)) (S (S Z))) (: (. (. f (. h g)) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993...(188)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((⊷ syn ((: (. f h) (-> Bool String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. (. (. f h) (. g f)) h) (-> Bool String)) (S (S (S Z)))) (: (. (. (. f h) (. g f)) h) (-> Bool String))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"EXPERIMENTS"},{"name":"testClass","value":"EXPERIMENTS"},{"name":"package","value":"EXPERIMENTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"b038c212cccec7f0","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/b038c212cccec7f0","status":"failed","statusDetails":"Test failed: Expected '((⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 Bool)) (syn (: h (-> $_31993016 Bool)) (S (S Z))) (: (. (. f h) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993016 String)) (S (S Z))) (: (. (. f (. h g)) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993...(188)' but got '((⊷ syn ((: (. f h) (-> Bool String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. (. (. f h) (. g f)) h) (-> Bool String)) (S (S (S Z)))) (: (. (. (. f h) (. g f)) h) (-> Bool String))))'","time":{"start":1726881791000,"stop":1726881792178,"duration":1178}},{"uid":"3a726d6a8b5a362d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/3a726d6a8b5a362d","status":"failed","statusDetails":"Test failed: Expected '((⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 Bool)) (syn (: h (-> $_31993016 Bool)) (S (S Z))) (: (. (. f h) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993016 String)) (S (S Z))) (: (. (. f (. h g)) h) (-> $_31993016 String)))) (⊷ syn ((: (. $_31992970 h) (-> $_31993016 String)) (S (S (S Z)))) (let (: h (-> $_31993016 String)) (syn (: h (-> $_31993...(188)' but got '((⊷ syn ((: (. f h) (-> Bool String)) (S (S (S Z)))) (: (. f h) (-> Bool String))) (⊷ syn ((: (. (. (. f h) (. g f)) h) (-> Bool String)) (S (S (S Z)))) (: (. (. (. f h) (. g f)) h) (-> Bool String))))'","time":{"start":1726795451000,"stop":1726795452171,"duration":1171}}]},"tags":[]},"source":"a8c4d0a00c3bd0de.json","parameterValues":[]}