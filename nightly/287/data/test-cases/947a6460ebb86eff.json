{"uid":"947a6460ebb86eff","name":"SUBTYPING-TEST.05","historyId":"SUBTYPING:SUBTYPING#SUBTYPING-TEST.05","time":{"start":1727400238000,"stop":1727400238120,"duration":120},"status":"failed","statusMessage":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-27T00:33:45/tests/extended_compat/hyperon-pln/metta/subtyping/subtyping-test.metta.html#SUBTYPING.SUBTYPING-TEST.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: (coerce $proof felix) Animal) kb rb (fromNumber 2)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"SUBTYPING"},{"name":"testClass","value":"SUBTYPING"},{"name":"package","value":"SUBTYPING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"b883f6a002644e77","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/b883f6a002644e77","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Animal) (synthesize (: felix Animal) kb rb (S Z)))) (: (coerce STRefl felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce MA felix) Animal)) (let (: felix Animal) (synthesize (: felix Animal) kb rb (S Z)) (: (coerce (STTrans STRefl STRefl) felix) Animal)) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans STRefl MA) felix) Animal)) (: (coerce (STTrans CM MA) felix) Animal) (let (: felix Mammal) (synthesize (: felix Mammal) kb rb (S Z)) (: (coerce (STTrans MA STRefl) felix) Animal)) (let (: felix Animal) (...(201)' but got '()'","time":{"start":1727313784000,"stop":1727313784105,"duration":105}}]},"tags":[]},"source":"947a6460ebb86eff.json","parameterValues":[]}