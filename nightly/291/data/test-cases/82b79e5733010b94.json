{"uid":"82b79e5733010b94","name":"TESTS0.02","historyId":"PREV:PREV#TESTS0.02","time":{"start":1727747181000,"stop":1727747181002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/nars/prev/tests0.metta.html#PREV.TESTS0.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (I- ((Garfield --> carnivore) (1.0 0.9)) (((Garfield --> cat) ==> (Garfield --> carnivore)) (1.0 0.9))))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (((Garfield --> cat) (1.0 0.44751381215469616)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: (((Garfield --> cat) (1.0 0.44751381215469616)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"PREV"},{"name":"testClass","value":"PREV"},{"name":"package","value":"PREV"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"2d443692c5957e82","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/2d443692c5957e82","status":"passed","time":{"start":1727660727000,"stop":1727660727002,"duration":2}},{"uid":"29278888d709aa5a","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/29278888d709aa5a","status":"passed","time":{"start":1727574423000,"stop":1727574423002,"duration":2}},{"uid":"96507c62f2f281f","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/96507c62f2f281f","status":"passed","time":{"start":1727487732000,"stop":1727487732002,"duration":2}},{"uid":"93798f6105ea9828","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/93798f6105ea9828","status":"passed","time":{"start":1727401368000,"stop":1727401368003,"duration":3}},{"uid":"f6a00c03b3f0025b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/f6a00c03b3f0025b","status":"passed","time":{"start":1727314916000,"stop":1727314916002,"duration":2}}]},"tags":[]},"source":"82b79e5733010b94.json","parameterValues":[]}