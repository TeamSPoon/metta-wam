{"uid":"3a31d6f8c7b972a3","name":"BACKWARD-CHAINER-XP.13","historyId":"BACKWARD-CHAINER:BACKWARD-CHAINER#BACKWARD-CHAINER-XP.13","time":{"start":1727745508000,"stop":1727745508044,"duration":44},"status":"failed","statusMessage":"Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","statusTrace":"AssertionError: Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/backward-chainer/backward-chainer-xp.metta.html#BACKWARD-CHAINER.BACKWARD-CHAINER-XP.13\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult ===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (\"=== Bare Entail Match ===\")","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: (===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"BACKWARD-CHAINER"},{"name":"testClass","value":"BACKWARD-CHAINER"},{"name":"package","value":"BACKWARD-CHAINER"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"6001a2b9018ddfe","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/6001a2b9018ddfe","status":"failed","statusDetails":"Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","time":{"start":1727659051000,"stop":1727659051046,"duration":46}},{"uid":"1c1912360badefca","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/1c1912360badefca","status":"failed","statusDetails":"Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","time":{"start":1727572750000,"stop":1727572750047,"duration":47}},{"uid":"8c9ee93b4076699b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/8c9ee93b4076699b","status":"failed","statusDetails":"Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","time":{"start":1727486066000,"stop":1727486066043,"duration":43}},{"uid":"47e0c9d6eb4f1d14","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/47e0c9d6eb4f1d14","status":"failed","statusDetails":"Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","time":{"start":1727399696000,"stop":1727399696044,"duration":44}},{"uid":"bf17244117502260","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/bf17244117502260","status":"failed","statusDetails":"Test failed: Expected '(\"=== Bare Entail Match ===\")' but got '(===)'","time":{"start":1727313251000,"stop":1727313251040,"duration":40}}]},"tags":[]},"source":"3a31d6f8c7b972a3.json","parameterValues":[]}