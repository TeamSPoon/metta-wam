{"uid":"2629d846dcfa6f66","name":"IBC-XP.16","historyId":"ITERATIVE-CHAINING:ITERATIVE-CHAINING#IBC-XP.16","time":{"start":1727745881000,"stop":1727745881040,"duration":40},"status":"failed","statusMessage":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","statusTrace":"AssertionError: Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/iterative-chaining/ibc-xp.metta.html#ITERATIVE-CHAINING.IBC-XP.16\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult ===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (\"=== Test Utility Functions ===\")","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: (===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ITERATIVE-CHAINING"},{"name":"testClass","value":"ITERATIVE-CHAINING"},{"name":"package","value":"ITERATIVE-CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"fb186f537df5c152","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/fb186f537df5c152","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727659425000,"stop":1727659425045,"duration":45}},{"uid":"3575544d12808f98","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/3575544d12808f98","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727573123000,"stop":1727573123046,"duration":46}},{"uid":"aaba62204bb8e9f4","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/aaba62204bb8e9f4","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727486437000,"stop":1727486437048,"duration":48}},{"uid":"4489be41cbd2209c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/4489be41cbd2209c","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727400069000,"stop":1727400069046,"duration":46}},{"uid":"35792e0f41ed6d91","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/35792e0f41ed6d91","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727313618000,"stop":1727313618042,"duration":42}}]},"tags":[]},"source":"2629d846dcfa6f66.json","parameterValues":[]}