{"uid":"313479fdac8d5b38","name":"IBC-XP.33","historyId":"ITERATIVE-CHAINING:ITERATIVE-CHAINING#IBC-XP.33","time":{"start":1727745881000,"stop":1727745881408,"duration":408},"status":"failed","statusMessage":"Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","statusTrace":"AssertionError: Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/iterative-chaining/ibc-xp.metta.html#ITERATIVE-CHAINING.IBC-XP.33\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (isyn (: $prf F) (fromNumber 3) (fromNumber 1)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: ((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: ((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ITERATIVE-CHAINING"},{"name":"testClass","value":"ITERATIVE-CHAINING"},{"name":"package","value":"ITERATIVE-CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"e12f2b3324053f11","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/e12f2b3324053f11","status":"failed","statusDetails":"Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","time":{"start":1727659425000,"stop":1727659425411,"duration":411}},{"uid":"bd67496bdacf5a6e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/bd67496bdacf5a6e","status":"failed","statusDetails":"Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","time":{"start":1727573123000,"stop":1727573123412,"duration":412}},{"uid":"a90d5bf26d9ce042","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/a90d5bf26d9ce042","status":"failed","statusDetails":"Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","time":{"start":1727486437000,"stop":1727486437429,"duration":429}},{"uid":"5c5ed3ffc5da5e25","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/5c5ed3ffc5da5e25","status":"failed","statusDetails":"Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","time":{"start":1727400069000,"stop":1727400069408,"duration":408}},{"uid":"381dfdd4b1a82f6b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/381dfdd4b1a82f6b","status":"failed","statusDetails":"Test failed: Expected '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (let (: $_5730 E) (syn (: $_5730 E) (S (S Z))) (: ((ModusPonens ef) $_5730) F)))' but got '((: (((((. (. ModusPonens)) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F) (: (((((((. .) .) ModusPonens) Deduction) ef) de) ((ModusPonens cd) ((ModusPonens bc) ((ModusPonens ab) a)))) F))'","time":{"start":1727313618000,"stop":1727313618375,"duration":375}}]},"tags":[]},"source":"313479fdac8d5b38.json","parameterValues":[]}