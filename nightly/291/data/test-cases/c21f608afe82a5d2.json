{"uid":"c21f608afe82a5d2","name":"TESTS0.02","historyId":"NEW:NEW#TESTS0.02","time":{"start":1727746948000,"stop":1727746948002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/nars/new/tests0.metta.html#NEW.TESTS0.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (I- ((Garfield --> carnivore) (1.0 0.9)) (((Garfield --> cat) ==> (Garfield --> carnivore)) (1.0 0.9))))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (((Garfield --> cat) (1.0 0.44751381215469616)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: (((Garfield --> cat) (1.0 0.44751381215469616)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"NEW"},{"name":"testClass","value":"NEW"},{"name":"package","value":"NEW"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"24b6a044fe77d8da","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/24b6a044fe77d8da","status":"passed","time":{"start":1727660494000,"stop":1727660494003,"duration":3}},{"uid":"7704fba7ebb7d201","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/7704fba7ebb7d201","status":"passed","time":{"start":1727574188000,"stop":1727574188003,"duration":3}},{"uid":"40e31872569b9d0e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/40e31872569b9d0e","status":"passed","time":{"start":1727487499000,"stop":1727487499003,"duration":3}},{"uid":"3c2ab29016eef4e1","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/3c2ab29016eef4e1","status":"passed","time":{"start":1727401136000,"stop":1727401136003,"duration":3}},{"uid":"34477db297c6c0c5","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/34477db297c6c0c5","status":"passed","time":{"start":1727314681000,"stop":1727314681002,"duration":2}}]},"tags":[]},"source":"c21f608afe82a5d2.json","parameterValues":[]}