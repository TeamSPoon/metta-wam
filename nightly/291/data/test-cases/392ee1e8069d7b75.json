{"uid":"392ee1e8069d7b75","name":"UNIFY-VIA-CASE.04","historyId":"EXPERIMENTS:EXPERIMENTS#UNIFY-VIA-CASE.04","time":{"start":1727746158000,"stop":1727746158083,"duration":83},"status":"failed","statusMessage":"Test failed: Expected '()' but got '((Link A B))'","statusTrace":"AssertionError: Test failed: Expected '()' but got '((Link A B))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/synthesis/experiments/unify-via-case.metta.html#EXPERIMENTS.UNIFY-VIA-CASE.04\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (case (Link $x B) (((g $y) (Link $x $y)))))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: ((Link A B))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"EXPERIMENTS"},{"name":"testClass","value":"EXPERIMENTS"},{"name":"package","value":"EXPERIMENTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"cc1cbdc0f1139c9c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/cc1cbdc0f1139c9c","status":"failed","statusDetails":"Test failed: Expected '()' but got '((Link A B))'","time":{"start":1727659700000,"stop":1727659700069,"duration":69}},{"uid":"28f3dad8a849b0ea","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/28f3dad8a849b0ea","status":"failed","statusDetails":"Test failed: Expected '()' but got '((Link A B))'","time":{"start":1727573400000,"stop":1727573400084,"duration":84}},{"uid":"9e38b5c0607bc54d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/9e38b5c0607bc54d","status":"failed","statusDetails":"Test failed: Expected '()' but got '((Link A B))'","time":{"start":1727486712000,"stop":1727486712080,"duration":80}},{"uid":"9d433988b3d4ea61","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/9d433988b3d4ea61","status":"failed","statusDetails":"Test failed: Expected '()' but got '((Link A B))'","time":{"start":1727400347000,"stop":1727400347081,"duration":81}},{"uid":"8004d26cfad7c3bf","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/8004d26cfad7c3bf","status":"failed","statusDetails":"Test failed: Expected '()' but got '((Link A B))'","time":{"start":1727313892000,"stop":1727313892073,"duration":73}}]},"tags":[]},"source":"392ee1e8069d7b75.json","parameterValues":[]}