{"uid":"6001fc1b9c804c88","name":"NATSTANDALONETEST.13","historyId":"HOL:HOL#NATSTANDALONETEST.13","time":{"start":1727745691000,"stop":1727745691289,"duration":289},"status":"failed","statusMessage":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/hol/NatStandaloneTest.metta.html#HOL.NATSTANDALONETEST.13\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (bc (: $prf (-> (=== (plus $x Z) $x) (=== (plus (S $x) Z) (S $x)))) (fromNumber 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: ((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HOL"},{"name":"testClass","value":"HOL"},{"name":"package","value":"HOL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"da2843216c24e210","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/da2843216c24e210","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1727659236000,"stop":1727659236282,"duration":282}},{"uid":"22c8a18e1bcc2308","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/22c8a18e1bcc2308","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1727572933000,"stop":1727572933283,"duration":283}},{"uid":"9ca76e672d060be6","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/9ca76e672d060be6","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1727486248000,"stop":1727486248265,"duration":265}},{"uid":"7c69138562eb640","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/7c69138562eb640","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1727399880000,"stop":1727399880273,"duration":273}},{"uid":"21d73c60e13b1b72","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/21d73c60e13b1b72","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (bc (: $_13058 (plus Z (=== (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (S (S Z))))) (: (((. Replace0) (Replace0 plusBase)) $_13058) (-> (=== (plus $_12902 Z) $_12902) (=== (plus (S $_12902) Z) (S $_12902))))) (let (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (bc (: $_13058 (=== (=== (plus (S $_12902) Z) (S $_12902)) (=== (plus $_12902 Z) $_12902))) (S (S Z))) (: (((. Replace0) Sym) $_13058) (-> (=== (plus $_12902 Z) $...(1680)' but got '()'","time":{"start":1727313431000,"stop":1727313431286,"duration":286}}]},"tags":[]},"source":"6001fc1b9c804c88.json","parameterValues":[]}