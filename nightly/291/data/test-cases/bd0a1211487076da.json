{"uid":"bd0a1211487076da","name":"SYMBOLS.01","historyId":"STD:STD#SYMBOLS.01","time":{"start":1727744164000,"stop":1727744164132,"duration":132},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/more-anti-regression/std/symbols.metta.html#STD.SYMBOLS.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (match &self (, (chr $g \"chr16\") (start $g $start) (end $g $end)) (if (and (> $start 500) (< $end 2000)) $g ())))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: ((gene \"D\") (gene \"A\") ())","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: ((gene \"A\") () (gene \"D\"))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"STD"},{"name":"testClass","value":"STD"},{"name":"package","value":"STD"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"4f44891773f14862","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/4f44891773f14862","status":"passed","time":{"start":1727657701000,"stop":1727657701127,"duration":127}},{"uid":"a02f8ea0990bfd04","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/a02f8ea0990bfd04","status":"passed","time":{"start":1727571407000,"stop":1727571407130,"duration":130}},{"uid":"8e4d36c9b5cf119d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/8e4d36c9b5cf119d","status":"passed","time":{"start":1727484718000,"stop":1727484718117,"duration":117}},{"uid":"6a5669aa409292f1","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/6a5669aa409292f1","status":"passed","time":{"start":1727398346000,"stop":1727398346125,"duration":125}},{"uid":"6a2fd309b162a10f","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/6a2fd309b162a10f","status":"passed","time":{"start":1727311932000,"stop":1727311932104,"duration":104}}]},"tags":[]},"source":"bd0a1211487076da.json","parameterValues":[]}