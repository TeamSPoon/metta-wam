{"uid":"7921bdb2e91b96ad","name":"IFC-XP.05","historyId":"ITERATIVE-CHAINING:ITERATIVE-CHAINING#IFC-XP.05","time":{"start":1727745881000,"stop":1727745881045,"duration":45},"status":"failed","statusMessage":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","statusTrace":"AssertionError: Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/iterative-chaining/ifc-xp.metta.html#ITERATIVE-CHAINING.IFC-XP.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult ===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (\"=== Test Utility Functions ===\")","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: (===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ITERATIVE-CHAINING"},{"name":"testClass","value":"ITERATIVE-CHAINING"},{"name":"package","value":"ITERATIVE-CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"c1ff82dc9e64fec","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/c1ff82dc9e64fec","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727659425000,"stop":1727659425042,"duration":42}},{"uid":"7ad46551dc6d8b7a","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/7ad46551dc6d8b7a","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727573123000,"stop":1727573123045,"duration":45}},{"uid":"1141a5cc20e46291","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/1141a5cc20e46291","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727486437000,"stop":1727486437044,"duration":44}},{"uid":"e5253697c2bb4e27","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/e5253697c2bb4e27","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727400069000,"stop":1727400069044,"duration":44}},{"uid":"2885127c0d7bd4ff","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/2885127c0d7bd4ff","status":"failed","statusDetails":"Test failed: Expected '(\"=== Test Utility Functions ===\")' but got '(===)'","time":{"start":1727313618000,"stop":1727313618037,"duration":37}}]},"tags":[]},"source":"7921bdb2e91b96ad.json","parameterValues":[]}