{"uid":"bf74385bbf68d0d8","name":"BACKWARD-CHAINER-XP.35","historyId":"BACKWARD-CHAINER:BACKWARD-CHAINER#BACKWARD-CHAINER-XP.35","time":{"start":1727745508000,"stop":1727745508047,"duration":47},"status":"failed","statusMessage":"Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","statusTrace":"AssertionError: Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/extended_compat/hyperon-pln/metta/backward-chainer/backward-chainer-xp.metta.html#BACKWARD-CHAINER.BACKWARD-CHAINER-XP.35\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult ===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (\"=== DTL Equality Match ===\")","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: (===)","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"BACKWARD-CHAINER"},{"name":"testClass","value":"BACKWARD-CHAINER"},{"name":"package","value":"BACKWARD-CHAINER"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"38828d739eb959d1","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/38828d739eb959d1","status":"failed","statusDetails":"Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","time":{"start":1727659051000,"stop":1727659051048,"duration":48}},{"uid":"731840c9446290dc","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/731840c9446290dc","status":"failed","statusDetails":"Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","time":{"start":1727572750000,"stop":1727572750045,"duration":45}},{"uid":"17c1268bdcff66ee","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/17c1268bdcff66ee","status":"failed","statusDetails":"Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","time":{"start":1727486066000,"stop":1727486066040,"duration":40}},{"uid":"138f53e61e5c6ea0","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/138f53e61e5c6ea0","status":"failed","statusDetails":"Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","time":{"start":1727399696000,"stop":1727399696043,"duration":43}},{"uid":"cdd2f0624576fab9","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/cdd2f0624576fab9","status":"failed","statusDetails":"Test failed: Expected '(\"=== DTL Equality Match ===\")' but got '(===)'","time":{"start":1727313251000,"stop":1727313251044,"duration":44}}]},"tags":[]},"source":"bf74385bbf68d0d8.json","parameterValues":[]}