{"uid":"a2bf1c817d981456","name":"APPEND.03","historyId":"MULTIDIRECTIONAL:MULTIDIRECTIONAL#APPEND.03","time":{"start":1727747886000,"stop":1727747886611,"duration":611},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-01T00:37:26/tests/features/multidirectional/append.metta.html#MULTIDIRECTIONAL.APPEND.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Assertion: (assertEqualToResult (let $ (append $What $Out (Cons 1 (Cons 2 (Cons 3 (Cons 4 Nil))))) ($What $Out)))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Expected: (((Cons 1 (Cons 2 (Cons 3 (Cons 4 Nil)))) Nil) ((Cons 1 (Cons 2 (Cons 3 Nil))) (Cons 4 Nil)) ((Cons 1 (Cons 2 Nil)) (Cons 3 (Cons 4 Nil))) ((Cons 1 Nil) (Cons 2 (Cons 3 (Cons 4 Nil)))) (Nil (Cons 1 (Cons 2 (Cons 3 (Cons 4 Nil))))))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Actual: ((Nil (Cons 1 (Cons 2 (Cons 3 (Cons 4 Nil))))) ((Cons 1 Nil) (Cons 2 (Cons 3 (Cons 4 Nil)))) ((Cons 1 (Cons 2 Nil)) (Cons 3 (Cons 4 Nil))) ((Cons 1 (Cons 2 (Cons 3 Nil))) (Cons 4 Nil)) ((Cons 1 (Cons 2 (Cons 3 (Cons 4 Nil)))) Nil))","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"MULTIDIRECTIONAL"},{"name":"testClass","value":"MULTIDIRECTIONAL"},{"name":"package","value":"MULTIDIRECTIONAL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"c1af825dab37611f","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/c1af825dab37611f","status":"passed","time":{"start":1727661431000,"stop":1727661431838,"duration":838}},{"uid":"eade5a28bd3c0382","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/eade5a28bd3c0382","status":"passed","time":{"start":1727575135000,"stop":1727575135621,"duration":621}},{"uid":"857cdbef7558cd27","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/857cdbef7558cd27","status":"passed","time":{"start":1727488437000,"stop":1727488437597,"duration":597}},{"uid":"a11dc2fd68264098","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/a11dc2fd68264098","status":"passed","time":{"start":1727402073000,"stop":1727402073620,"duration":620}},{"uid":"43121e7bf37c42cb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/43121e7bf37c42cb","status":"passed","time":{"start":1727315615000,"stop":1727315615557,"duration":557}}]},"tags":[]},"source":"a2bf1c817d981456.json","parameterValues":[]}