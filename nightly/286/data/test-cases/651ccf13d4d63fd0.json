{"uid":"651ccf13d4d63fd0","name":"MODUSPONENSDTLTEST.03","historyId":"DEPENDENT-TYPES:DEPENDENT-TYPES#MODUSPONENSDTLTEST.03","time":{"start":1727313183000,"stop":1727313183365,"duration":365},"status":"failed","statusMessage":"Test failed: Expected '((: (ModusPonens cow_is_big x_is_big_chases_dog) (≞ (chase cow dog) (STV 0.9821 0.99))) (let (: $_30910 (≞ (→ (need cow dog) (chase cow dog)) (STV $_31044 $_31066))) (synthesize (: $_30910 (≞ (→ (need cow dog) (chase cow dog)) (STV $_31044 $_31066))) kb rb Z) (: (ModusPonens cow_needs_dog $_30910) (≞ (chase cow dog) (STV (+ (* $_31044 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $_31066 1) $_31066 1) 0.99) (if (< $_31066 1) $_31066 1) 0.99))))) (let (: $_30910 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $_31044 $_31066))) (synthesize (: $_30910 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $_31044 ...(2477)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((: (ModusPonens cow_is_big x_is_big_chases_dog) (≞ (chase cow dog) (STV 0.9821 0.99))) (let (: $_30910 (≞ (→ (need cow dog) (chase cow dog)) (STV $_31044 $_31066))) (synthesize (: $_30910 (≞ (→ (need cow dog) (chase cow dog)) (STV $_31044 $_31066))) kb rb Z) (: (ModusPonens cow_needs_dog $_30910) (≞ (chase cow dog) (STV (+ (* $_31044 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $_31066 1) $_31066 1) 0.99) (if (< $_31066 1) $_31066 1) 0.99))))) (let (: $_30910 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $_31044 $_31066))) (synthesize (: $_30910 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $_31044 ...(2477)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-26T00:33:38/tests/extended_compat/hyperon-pln/metta/pln/dependent-types/ModusPonensDTLTest.metta.html#DEPENDENT-TYPES.MODUSPONENSDTLTEST.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: $proof (≞ (chase cow dog) (STV $s $c))) kb rb (fromNumber 1)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((: (ModusPonens cow_is_big x_is_big_chases_dog) (≞ (chase cow dog) (STV 0.9821 0.99))) (let (: $_30910 (≞ (→ (need cow dog) (chase cow dog)) (STV $_31044 $_31066))) (synthesize (: $_30910 (≞ (→ (need cow dog) (chase cow dog)) (STV $_31044 $_31066))) kb rb Z) (: (ModusPonens cow_needs_dog $_30910) (≞ (chase cow dog) (STV (+ (* $_31044 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $_31066 1) $_31066 1) 0.99) (if (< $_31066 1) $_31066 1) 0.99))))) (let (: $_30910 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $_31044 $_31066))) (synthesize (: $_30910 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $_31044 ...(2477)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"DEPENDENT-TYPES"},{"name":"testClass","value":"DEPENDENT-TYPES"},{"name":"package","value":"DEPENDENT-TYPES"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"651ccf13d4d63fd0.json","parameterValues":[]}