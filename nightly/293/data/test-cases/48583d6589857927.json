{"uid":"48583d6589857927","name":"UNIFY-VIA-LET.06","historyId":"EXPERIMENTS:EXPERIMENTS#UNIFY-VIA-LET.06","time":{"start":1727918743000,"stop":1727918743003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-03T00:33:59/tests/extended_compat/hyperon-pln/metta/synthesis/experiments/unify-via-let.metta.html#EXPERIMENTS.UNIFY-VIA-LET.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let (Link A $y) (superpose ((Link $x B) (Node A) (Link $x C))) (Link $x $y)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Link A B) (Link A C))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((Link A B) (Link A C))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"EXPERIMENTS"},{"name":"testClass","value":"EXPERIMENTS"},{"name":"package","value":"EXPERIMENTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"6baab27b869516bb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/6baab27b869516bb","status":"passed","time":{"start":1727832358000,"stop":1727832358002,"duration":2}},{"uid":"bab0a986a3f34aaf","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/bab0a986a3f34aaf","status":"passed","time":{"start":1727746158000,"stop":1727746158002,"duration":2}},{"uid":"5ebc6ae3ea59497a","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/5ebc6ae3ea59497a","status":"passed","time":{"start":1727659700000,"stop":1727659700002,"duration":2}},{"uid":"108b1f7df00cd4a9","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/108b1f7df00cd4a9","status":"passed","time":{"start":1727573400000,"stop":1727573400003,"duration":3}},{"uid":"fa9222aa7e3fc505","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/fa9222aa7e3fc505","status":"passed","time":{"start":1727486712000,"stop":1727486712002,"duration":2}},{"uid":"63a1768555b554d4","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/63a1768555b554d4","status":"passed","time":{"start":1727400347000,"stop":1727400347002,"duration":2}},{"uid":"1e901ea0662110ea","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/1e901ea0662110ea","status":"passed","time":{"start":1727313892000,"stop":1727313892002,"duration":2}}]},"tags":[]},"source":"48583d6589857927.json","parameterValues":[]}