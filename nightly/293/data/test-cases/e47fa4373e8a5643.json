{"uid":"e47fa4373e8a5643","name":"APPEND-USING-EQUALITY.05","historyId":"MULTIDIRECTIONAL:MULTIDIRECTIONAL#APPEND-USING-EQUALITY.05","time":{"start":1727920469000,"stop":1727920469002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-03T00:33:59/tests/features/multidirectional/append_using_equality.metta.html#MULTIDIRECTIONAL.APPEND-USING-EQUALITY.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (let $ (== (Cons 1 (Cons 2 $What)) (append (Cons 1 (Cons 2 Nil)) $Out)) (== $Out $What)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (True)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (True)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"MULTIDIRECTIONAL"},{"name":"testClass","value":"MULTIDIRECTIONAL"},{"name":"package","value":"MULTIDIRECTIONAL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"2188be1dfe4107c1","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/2188be1dfe4107c1","status":"passed","time":{"start":1727834090000,"stop":1727834090002,"duration":2}},{"uid":"5d982fa07740d9fb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/5d982fa07740d9fb","status":"passed","time":{"start":1727747886000,"stop":1727747886002,"duration":2}},{"uid":"9da140f644737e7","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/9da140f644737e7","status":"passed","time":{"start":1727661431000,"stop":1727661431002,"duration":2}},{"uid":"d006659a14e962d7","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/d006659a14e962d7","status":"passed","time":{"start":1727575135000,"stop":1727575135002,"duration":2}},{"uid":"d7ac8875f781a9d6","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/d7ac8875f781a9d6","status":"passed","time":{"start":1727488437000,"stop":1727488437001,"duration":1}},{"uid":"77b905350db7ad03","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/77b905350db7ad03","status":"passed","time":{"start":1727402073000,"stop":1727402073002,"duration":2}},{"uid":"71e39b1033fcbc76","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/71e39b1033fcbc76","status":"passed","time":{"start":1727315615000,"stop":1727315615002,"duration":2}}]},"tags":[]},"source":"e47fa4373e8a5643.json","parameterValues":[]}