{"uid":"cbe6ddaad23128f6","name":"TYPE-PROP.74","historyId":"CHECK-TYPES-TEMP:CHECK-TYPES-TEMP#TYPE-PROP.74","time":{"start":1727917849000,"stop":1727917849118,"duration":118},"status":"failed","statusMessage":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","statusTrace":"AssertionError: Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-03T00:33:59/tests/extended_compat/check_types/check_types-temp/type_prop.metta.html#CHECK-TYPES-TEMP.TYPE-PROP.74\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $o (new-state (superpose (1 \"s\" 'c'))) (get-type $o)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((StateMonad Char) (StateMonad String) (StateMonad Number))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((StateMonad Number))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"CHECK-TYPES-TEMP"},{"name":"testClass","value":"CHECK-TYPES-TEMP"},{"name":"package","value":"CHECK-TYPES-TEMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"82778642208a8905","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/82778642208a8905","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727831461000,"stop":1727831461114,"duration":114}},{"uid":"db0edf3dd91bfa04","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/db0edf3dd91bfa04","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727745261000,"stop":1727745261123,"duration":123}},{"uid":"c97e3fda8894b86","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/c97e3fda8894b86","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727658800000,"stop":1727658800112,"duration":112}},{"uid":"a54528a5f9b588de","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/a54528a5f9b588de","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727572502000,"stop":1727572502121,"duration":121}},{"uid":"78df63dcafa9ca5","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/78df63dcafa9ca5","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727485816000,"stop":1727485816112,"duration":112}},{"uid":"d997f5e141567cba","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/d997f5e141567cba","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727399446000,"stop":1727399446124,"duration":124}},{"uid":"388e51c2102eb8d3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/388e51c2102eb8d3","status":"failed","statusDetails":"Test failed: Expected '((StateMonad Char) (StateMonad String) (StateMonad Number))' but got '((StateMonad Number))'","time":{"start":1727313004000,"stop":1727313004114,"duration":114}}]},"tags":[]},"source":"cbe6ddaad23128f6.json","parameterValues":[]}