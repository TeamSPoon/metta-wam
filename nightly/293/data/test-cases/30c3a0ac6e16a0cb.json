{"uid":"30c3a0ac6e16a0cb","name":"LTE.08","historyId":"STD:STD#LTE.08","time":{"start":1727916750000,"stop":1727916750002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-03T00:33:59/tests/more-anti-regression/std/lte.metta.html#STD.LTE.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: r8 (-> (≤ $x $y) (-> (≤ $y $z) (≤ $x $z))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"STD"},{"name":"testClass","value":"STD"},{"name":"package","value":"STD"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"18bc723e2c66c1a3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/292//#testresult/18bc723e2c66c1a3","status":"passed","time":{"start":1727830362000,"stop":1727830362001,"duration":1}},{"uid":"84b3ef1ebe48da35","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/84b3ef1ebe48da35","status":"passed","time":{"start":1727744164000,"stop":1727744164002,"duration":2}},{"uid":"75034d28654b0ddb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/75034d28654b0ddb","status":"passed","time":{"start":1727657701000,"stop":1727657701002,"duration":2}},{"uid":"243b8aff52ee352","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/243b8aff52ee352","status":"passed","time":{"start":1727571407000,"stop":1727571407002,"duration":2}},{"uid":"db4d077b24861d7c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/db4d077b24861d7c","status":"passed","time":{"start":1727484718000,"stop":1727484718002,"duration":2}},{"uid":"6c0e1c7cf9aa3d93","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/6c0e1c7cf9aa3d93","status":"passed","time":{"start":1727398346000,"stop":1727398346002,"duration":2}},{"uid":"80a586026548e463","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/80a586026548e463","status":"passed","time":{"start":1727311932000,"stop":1727311932002,"duration":2}}]},"tags":[]},"source":"30c3a0ac6e16a0cb.json","parameterValues":[]}