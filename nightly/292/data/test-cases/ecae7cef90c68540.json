{"uid":"ecae7cef90c68540","name":"GADT.02","historyId":"STD:STD#GADT.02","time":{"start":1727830362000,"stop":1727830362001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-02T00:34:06/tests/more-anti-regression/std/gadt.metta.html#STD.GADT.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let (List $t) (get-type (Cons 5 (Cons 6 Nil))) $t))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Number)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (Number)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"STD"},{"name":"testClass","value":"STD"},{"name":"package","value":"STD"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"992b8b1c0571e12a","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/992b8b1c0571e12a","status":"passed","time":{"start":1727744164000,"stop":1727744164002,"duration":2}},{"uid":"e64ff74c07222a80","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/e64ff74c07222a80","status":"passed","time":{"start":1727657701000,"stop":1727657701002,"duration":2}},{"uid":"34ef7954b01fea5c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/34ef7954b01fea5c","status":"passed","time":{"start":1727571407000,"stop":1727571407001,"duration":1}},{"uid":"6730b45ab611e4d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/6730b45ab611e4d","status":"passed","time":{"start":1727484718000,"stop":1727484718001,"duration":1}},{"uid":"ea51ea1657b5f9bc","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/ea51ea1657b5f9bc","status":"passed","time":{"start":1727398346000,"stop":1727398346001,"duration":1}},{"uid":"ec027997781cf7bd","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/ec027997781cf7bd","status":"passed","time":{"start":1727311932000,"stop":1727311932001,"duration":1}}]},"tags":[]},"source":"ecae7cef90c68540.json","parameterValues":[]}