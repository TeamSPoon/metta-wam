{"uid":"1735b1928e29ef7e","name":"NATTEST.06","historyId":"HOL:HOL#NATTEST.06","time":{"start":1727831893000,"stop":1727831893230,"duration":230},"status":"failed","statusMessage":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-02T00:34:06/tests/extended_compat/hyperon-pln/metta/hol/NatTest.metta.html#HOL.NATTEST.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: $prf (ZRID_plus $x)) kb rb (fromNumber 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HOL"},{"name":"testClass","value":"HOL"},{"name":"package","value":"HOL"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"ec10cc324fce3be2","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/ec10cc324fce3be2","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","time":{"start":1727745691000,"stop":1727745691232,"duration":232}},{"uid":"eb67282b5671f1da","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/eb67282b5671f1da","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","time":{"start":1727659236000,"stop":1727659236230,"duration":230}},{"uid":"d257fb421ebaf8fb","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/d257fb421ebaf8fb","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","time":{"start":1727572933000,"stop":1727572933208,"duration":208}},{"uid":"84435fb70ed6836","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/84435fb70ed6836","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","time":{"start":1727486248000,"stop":1727486248236,"duration":236}},{"uid":"93d88c7e34ab39d8","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/93d88c7e34ab39d8","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","time":{"start":1727399880000,"stop":1727399880216,"duration":216}},{"uid":"76e797b6cc05285d","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/76e797b6cc05285d","status":"failed","statusDetails":"Test failed: Expected '((let* (((: $_10400 (plus Z (ZRID_plus $_10448))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10448))) kb rb (S (S Z))))) (: (Repl0 Base_plus $_10400) (ZRID_plus $_10448))) (: (Repl0 (EqSym PropZRID_plus) Base_plus) (ZRID_plus Z)) (: (Repl0 (EqSym PropZRID_plus) (EqSym (EqSym Base_plus))) (ZRID_plus Z)) (let (: $_10400 (plus Z (ZRID_plus $_10856))) (synthesize (: $_10400 (plus Z (ZRID_plus $_10856))) kb rb (S (S Z))) (: (Repl0 (EqSym (EqSym Base_plus)) $_10400) (ZRID_plus $_10856))) (: (Repl0 (EqSym (EqStruct1 Base_plus)) (Repl0 (EqSym PropZRID_plus) Base_plus)) (ZRID_plus (plus Z Z))) (let (:...(1512)' but got '()'","time":{"start":1727313431000,"stop":1727313431212,"duration":212}}]},"tags":[]},"source":"1735b1928e29ef7e.json","parameterValues":[]}