{"uid":"ca681c0d3892a900","name":"BACKWARD-CHAIN.01","historyId":"CHAINING:CHAINING#BACKWARD-CHAIN.01","time":{"start":1727830139000,"stop":1727830139252,"duration":252},"status":"failed","statusMessage":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","statusTrace":"AssertionError: Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-02T00:34:06/tests/more-anti-regression/chaining/backward_chain.metta.html#CHAINING.BACKWARD-CHAIN.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (deduce (Evaluation (mortal $x))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"CHAINING"},{"name":"testClass","value":"CHAINING"},{"name":"package","value":"CHAINING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"a0941adf116c1fc5","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/a0941adf116c1fc5","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727743944000,"stop":1727743944263,"duration":263}},{"uid":"bd501a9a1cece08e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/bd501a9a1cece08e","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727657480000,"stop":1727657480247,"duration":247}},{"uid":"d3b2fb66f3874129","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/d3b2fb66f3874129","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727571183000,"stop":1727571183259,"duration":259}},{"uid":"5bfede35c2c0f338","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/5bfede35c2c0f338","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727484492000,"stop":1727484492244,"duration":244}},{"uid":"a62b6d38da2ada13","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/a62b6d38da2ada13","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727398125000,"stop":1727398125279,"duration":279}},{"uid":"ee0d619321c98f0b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/ee0d619321c98f0b","status":"failed","statusDetails":"Test failed: Expected '(((mortal $_91844) proven by ((human $_91844) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))' but got '(((mortal Plato) proven by ((human Plato) proven by (And (philosopher Plato) (likes-to-wrestle Plato)))))'","time":{"start":1727311705000,"stop":1727311705234,"duration":234}}]},"tags":[]},"source":"ca681c0d3892a900.json","parameterValues":[]}