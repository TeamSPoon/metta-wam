{"uid":"dcfaa77f1cb0410","name":"SUBTYPING-TEST.02","historyId":"SUBTYPING:SUBTYPING#SUBTYPING-TEST.02","time":{"start":1727832252000,"stop":1727832252018,"duration":18},"status":"failed","statusMessage":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","statusTrace":"AssertionError: Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-10-02T00:34:06/tests/extended_compat/hyperon-pln/metta/subtyping/subtyping-test.metta.html#SUBTYPING.SUBTYPING-TEST.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (synthesize (: (coerce $proof felix) Mammal) kb rb (fromNumber 1)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"SUBTYPING"},{"name":"testClass","value":"SUBTYPING"},{"name":"package","value":"SUBTYPING"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"b51ff1552ebe36b","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/291//#testresult/b51ff1552ebe36b","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","time":{"start":1727746051000,"stop":1727746051018,"duration":18}},{"uid":"3fac6db1716419d0","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/290//#testresult/3fac6db1716419d0","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","time":{"start":1727659592000,"stop":1727659592030,"duration":30}},{"uid":"b508cbc198ae9e5f","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/289//#testresult/b508cbc198ae9e5f","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","time":{"start":1727573294000,"stop":1727573294030,"duration":30}},{"uid":"e0a6d8222ef18a76","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/288//#testresult/e0a6d8222ef18a76","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","time":{"start":1727486606000,"stop":1727486606029,"duration":29}},{"uid":"6ff45f93634a2170","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/287//#testresult/6ff45f93634a2170","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","time":{"start":1727400238000,"stop":1727400238028,"duration":28}},{"uid":"a3a9f2a25cc8f9c","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/286//#testresult/a3a9f2a25cc8f9c","status":"failed","statusDetails":"Test failed: Expected '((let* (((: felix Mammal) (synthesize (: felix Mammal) kb rb Z))) (: (coerce STRefl felix) Mammal)) (: (coerce CM felix) Mammal))' but got '()'","time":{"start":1727313784000,"stop":1727313784018,"duration":18}}]},"tags":[]},"source":"dcfaa77f1cb0410.json","parameterValues":[]}