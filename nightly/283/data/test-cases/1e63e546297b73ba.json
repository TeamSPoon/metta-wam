{"uid":"1e63e546297b73ba","name":"BCHAIN.03","historyId":"WALK-THRU:WALK-THRU#BCHAIN.03","time":{"start":1727056052000,"stop":1727056052001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://teamspoon.github.io/metta-wam/reports/tests_output/baseline-compat-2024-09-23T00:34:11/tests/direct_comp/walk_thru/bchain.metta.html#WALK-THRU.BCHAIN.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: rule (-> (rule1output $x $y) (-> (⍃ $x $y) (less $x $y))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"WALK-THRU"},{"name":"testClass","value":"WALK-THRU"},{"name":"package","value":"WALK-THRU"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"80d2db9cf2d22195","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/282//#testresult/80d2db9cf2d22195","status":"passed","time":{"start":1726969793000,"stop":1726969793002,"duration":2}},{"uid":"b56207f8644c1e9e","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/281//#testresult/b56207f8644c1e9e","status":"passed","time":{"start":1726883133000,"stop":1726883133001,"duration":1}},{"uid":"39a4800a921a57a3","reportUrl":"https://TeamSPoon.github.io/metta-wam/nightly/280//#testresult/39a4800a921a57a3","status":"passed","time":{"start":1726796789000,"stop":1726796789002,"duration":2}}]},"tags":[]},"source":"1e63e546297b73ba.json","parameterValues":[]}